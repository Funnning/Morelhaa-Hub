local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeID = 12345678 -- Reemplaza con el ID de tu experiencia en Roblox
local webhookURL = "https://discord.com/api/webhooks/1398416080904650895/IDGXaUKOWrnkQs3yHD_kIGwwpjvGOxo8WcmGFhq7CxWKr1Om5K8P5-uadnz1-cz0PgZD"

-- Crear o actualizar el botÃ³n
local function mostrarBoton(data)
    if not data or data.players >= data.max_players then
        return
    end

    local gui = Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild("BrainrotTeleportUI")
    if gui then
        gui:Destroy()
    end

    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "BrainrotTeleportUI"
    screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    local boton = Instance.new("TextButton")
    boton.Size = UDim2.new(0, 260, 0, 50)
    boton.Position = UDim2.new(0.5, -130, 0.85, 0)
    boton.Text = "Unirse al servidor: " .. data.brainrot_type .. " ðŸ§  $" .. tostring(data.earnings)
    boton.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
    boton.TextScaled = true
    boton.Parent = screenGui

    boton.MouseButton1Click:Connect(function()
        TeleportService:TeleportToPlaceInstance(placeID, data.job_id, Players.LocalPlayer)
    end)
end

-- Bucle para escanear cada 2 segundos
spawn(function()
    while true do
        local rawResponse
        pcall(function()
            rawResponse = HttpService:GetAsync(webhookURL)
        end)

        if rawResponse then
            local data
            pcall(function()
                data = HttpService:JSONDecode(rawResponse)
            end)

            if data and data.job_id and data.brainrot_type and data.players and data.max_players and data.earnings then
                mostrarBoton(data)
            end
        else
            warn("Error al consultar el webhook.")
        end

        wait(2)
    end
end)

